version: "3.3"
services:
  database:
    image: "postgres:16"
    restart: "always"
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ${DOCKER_LOCAL_VOLUME}:${DOCKER_DB_VOLUME}
    networks:
      - "postgres"
    ports:
      - 5432:5432

  nats:
    image: nats
    container_name: nats
    restart: always
    ports:
      - 4222:4222
      - 8222:8222
    networks:
      - "nats"

  image-service-worker:
    build: ./image-service-worker/
    container_name: image-service-worker
    depends_on:
      - nats
    volumes:
      - ${DOCKER_LOCAL_MOUNT}:/home/image-service-worker:rw
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 10s
    networks:
      - "nats"

  telegram-service:
    build: ./telegram-frontend-service/
    container_name: telegram-service
    depends_on:
      - database
      - nats
    volumes:
      - ${DOCKER_LOCAL_MOUNT}:/home/telegram-service:rw
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 10s
    networks:
      - "nats"
      - "postgres"

networks:
  postgres:
    driver: "bridge"
  nats:
    name: "nats"
